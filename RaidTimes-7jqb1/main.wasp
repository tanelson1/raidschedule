app RaidTimes {
  wasp: {
    version: "^0.11.1"
  },
  title: "RaidTimes",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id               Int                @id @default(autoincrement())
    username         String             @unique
    password         String
    RaidRegistration RaidRegistration[]
psl=}

entity Raid {=psl
    id               Int                @id @default(autoincrement())
    description      String
    scheduledTime    DateTime
    maxMembers       Int                @default(6)
    RaidRegistration RaidRegistration[]
psl=}

entity RaidRegistration {=psl
    id     Int    @id @default(autoincrement())
    status String
    user   User   @relation(fields: [userId], references: [id])
    userId Int
    raid   Raid   @relation(fields: [raidId], references: [id])
    raidId Int
psl=}

action scheduleRaid {
  fn: import { scheduleRaid } from "@server/actions.js",
  entities: [Raid]
}

action registerForRaid {
  fn: import { registerForRaid } from "@server/actions.js",
  entities: [User, Raid, RaidRegistration]
}

action registerAsAlternate {
  fn: import { registerAsAlternate } from "@server/actions.js",
  entities: [User, Raid, RaidRegistration]
}

action declineRaid {
  fn: import { declineRaid } from "@server/actions.js",
  entities: [User, Raid, RaidRegistration]
}

query getRaids {
  fn: import { getRaids } from "@server/queries.js",
  entities: [Raid]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User]
}

query getRegistrations {
  fn: import { getRegistrations } from "@server/queries.js",
  entities: [RaidRegistration]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: true
}